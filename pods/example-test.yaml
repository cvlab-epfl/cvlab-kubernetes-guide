apiVersion: v1
kind: Pod
metadata:
  name: username-example-test
spec:
  containers:
    - name: base-test
      image: ic-registry.epfl.ch/cvlab/lis/lab-base:cpu
      command: ["/opt/lab/setup_and_wait_forever.sh"] 
      #   this one will do nothing and wait, so you can enter the container yourself with
      #   kubectl exec -it pod_name /bin/bash

      env:
      - name: CLUSTER_USER
        value: "username" # set this
      - name: CLUSTER_USER_ID
      # set this, run `id` on cvlab cluster to get the number, it will print among other things:
      # uid=number(yourname)
        value: "12345" 
      - name: CLUSTER_GROUP_NAME
        value: "CVLAB-unit"
      - name: CLUSTER_GROUP_ID
        value: "11166"
      # - name: SSH_PUBLIC_KEY # ssh does not seem to work yet
      #   value: "[...]"

      ports:
        - containerPort: 22
          name: ssh
        - containerPort: 8888
          name: jupyter
          
      volumeMounts:
        - mountPath: /cvlabsrc1
          name: cvlabsrc1
        - mountPath: /cvlabdata1
          name: cvlabdata1
        - mountPath: /cvlabdata2
          name: cvlabdata2

      # specify that it uses a GPU!
      # resources:
      #   limits:
      #     nvidia.com/gpu: 1 # requesting 1 GPU
  
  volumes:
    - name: cvlabsrc1
      persistentVolumeClaim:
        claimName: pv-cvlabsrc1

    - name: cvlabdata1
      persistentVolumeClaim:
        claimName: pv-cvlabdata1

    - name: cvlabdata2
      persistentVolumeClaim:
        claimName: pv-cvlabdata2